"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/detect-it";
exports.ids = ["vendor-chunks/detect-it"];
exports.modules = {

/***/ "(ssr)/./node_modules/detect-it/dist/detect-it.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/detect-it/dist/detect-it.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deviceType: () => (/* binding */ deviceType),\n/* harmony export */   primaryInput: () => (/* binding */ primaryInput),\n/* harmony export */   supportsPassiveEvents: () => (/* binding */ supportsPassiveEvents),\n/* harmony export */   supportsPointerEvents: () => (/* binding */ supportsPointerEvents),\n/* harmony export */   supportsTouchEvents: () => (/* binding */ supportsTouchEvents)\n/* harmony export */ });\n// so it doesn't throw if no window or matchMedia\r\nvar w = typeof window !== 'undefined' ? window : { screen: {}, navigator: {} };\r\nvar matchMedia = (w.matchMedia || (function () { return ({ matches: false }); })).bind(w);\r\n// passive events test\r\n// adapted from https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\nvar passiveOptionAccessed = false;\r\nvar options = {\r\n    get passive() {\r\n        return (passiveOptionAccessed = true);\r\n    },\r\n};\r\n// have to set and remove a no-op listener instead of null\r\n// (which was used previously), because Edge v15 throws an error\r\n// when providing a null callback.\r\n// https://github.com/rafgraph/detect-passive-events/pull/3\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nvar noop = function () { };\r\nw.addEventListener && w.addEventListener('p', noop, options);\r\nw.removeEventListener && w.removeEventListener('p', noop, false);\r\nvar supportsPassiveEvents = passiveOptionAccessed;\r\nvar supportsPointerEvents = 'PointerEvent' in w;\r\nvar onTouchStartInWindow = 'ontouchstart' in w;\r\nvar touchEventInWindow = 'TouchEvent' in w;\r\n// onTouchStartInWindow is the old-old-legacy way to determine a touch device\r\n// and many websites interpreted it to mean that the device is a touch only phone,\r\n// so today browsers on a desktop/laptop computer with a touch screen (primary input mouse)\r\n// have onTouchStartInWindow as false (to prevent from being confused with a\r\n// touchOnly phone) even though they support the TouchEvents API, so need to check\r\n// both onTouchStartInWindow and touchEventInWindow for TouchEvent support,\r\n// however, some browsers (chromium) support the TouchEvents API even when running on\r\n// a mouse only device (touchEventInWindow true, but onTouchStartInWindow false)\r\n// so the touchEventInWindow check needs to include an coarse pointer media query\r\nvar supportsTouchEvents = onTouchStartInWindow ||\r\n    (touchEventInWindow && matchMedia('(any-pointer: coarse)').matches);\r\nvar hasTouch = (w.navigator.maxTouchPoints || 0) > 0 || supportsTouchEvents;\r\n// userAgent is used as a backup to correct for known device/browser bugs\r\n// and when the browser doesn't support interaction media queries (pointer and hover)\r\n// see https://caniuse.com/css-media-interaction\r\nvar userAgent = w.navigator.userAgent || '';\r\n// iPads now support a mouse that can hover, however the media query interaction\r\n// feature results always say iPads only have a coarse pointer that can't hover\r\n// even when a mouse is connected (anyFine and anyHover are always false),\r\n// this unfortunately indicates a touch only device but iPads should\r\n// be classified as a hybrid device, so determine if it is an iPad\r\n// to indicate it should be treated as a hybrid device with anyHover true\r\nvar isIPad = matchMedia('(pointer: coarse)').matches &&\r\n    // both iPad and iPhone can \"request desktop site\", which sets the userAgent to Macintosh\r\n    // so need to check both userAgents to determine if it is an iOS device\r\n    // and screen size to separate iPad from iPhone\r\n    /iPad|Macintosh/.test(userAgent) &&\r\n    Math.min(w.screen.width || 0, w.screen.height || 0) >= 768;\r\nvar hasCoarsePrimaryPointer = (matchMedia('(pointer: coarse)').matches ||\r\n    // if the pointer is not coarse and not fine then the browser doesn't support\r\n    // interaction media queries (see https://caniuse.com/css-media-interaction)\r\n    // so if it has onTouchStartInWindow assume it has a coarse primary pointer\r\n    (!matchMedia('(pointer: fine)').matches && onTouchStartInWindow)) &&\r\n    // bug in firefox (as of v81) on hybrid windows devices where the interaction media queries\r\n    // always indicate a touch only device (only has a coarse pointer that can't hover)\r\n    // so assume that the primary pointer is not coarse for firefox windows\r\n    !/Windows.*Firefox/.test(userAgent);\r\nvar hasAnyHoverOrAnyFinePointer = matchMedia('(any-pointer: fine)').matches ||\r\n    matchMedia('(any-hover: hover)').matches ||\r\n    // iPads might have an input device that can hover, so assume it has anyHover\r\n    isIPad ||\r\n    // if no onTouchStartInWindow then the browser is indicating that it is not a touch only device\r\n    // see above note for supportsTouchEvents\r\n    !onTouchStartInWindow;\r\n// a hybrid device is one that both hasTouch and\r\n// any input can hover or has a fine pointer, or the primary pointer is not coarse\r\n// if it's not a hybrid, then if it hasTouch it's touchOnly, otherwise it's mouseOnly\r\nvar deviceType = hasTouch && (hasAnyHoverOrAnyFinePointer || !hasCoarsePrimaryPointer)\r\n    ? 'hybrid'\r\n    : hasTouch\r\n        ? 'touchOnly'\r\n        : 'mouseOnly';\r\nvar primaryInput = deviceType === 'mouseOnly'\r\n    ? 'mouse'\r\n    : deviceType === 'touchOnly'\r\n        ? 'touch'\r\n        : // if the device is a hybrid, then if the primary pointer is coarse\r\n            // assume the primaryInput is touch, otherwise assume it's mouse\r\n            hasCoarsePrimaryPointer\r\n                ? 'touch'\r\n                : 'mouse';\n\n\n//# sourceMappingURL=detect-it.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/detect-it/dist/detect-it.esm.js\n");

/***/ })

};
;